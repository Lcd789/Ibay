// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(IbayContext))]
    partial class IbayContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DAL.Model.Cart", b =>
                {
                    b.Property<int>("cart_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("fk_produc_id")
                        .HasColumnType("int");

                    b.Property<int>("fk_user_id")
                        .HasColumnType("int");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("cart_id");

                    b.HasIndex("product_id");

                    b.HasIndex("user_id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("DAL.Model.Product", b =>
                {
                    b.Property<int>("product_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("added_time")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("available")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("fk_user_id")
                        .HasColumnType("int");

                    b.Property<string>("product_description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("product_name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("product_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("product_stock")
                        .HasColumnType("int");

                    b.Property<int>("product_type")
                        .HasColumnType("int");

                    b.Property<int>("selleruser_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated_time")
                        .HasColumnType("datetime(6)");

                    b.HasKey("product_id");

                    b.HasIndex("selleruser_id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DAL.Model.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("creation_date")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("user_email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<decimal>("user_money")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("user_password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("user_pseudo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("user_role")
                        .HasColumnType("int");

                    b.HasKey("user_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DAL.Model.Cart", b =>
                {
                    b.HasOne("DAL.Model.Product", "product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Model.User", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("user");
                });

            modelBuilder.Entity("DAL.Model.Product", b =>
                {
                    b.HasOne("DAL.Model.User", "seller")
                        .WithMany()
                        .HasForeignKey("selleruser_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("seller");
                });
#pragma warning restore 612, 618
        }
    }
}
